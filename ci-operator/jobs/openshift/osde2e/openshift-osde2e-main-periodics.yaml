periodics:
- agent: kubernetes
  cluster: build03
  cron: 0 */6 * * *
  decorate: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "false"
  name: osde2e-prod-aws-e2e-default
  spec:
    containers:
    - args:
      - test
      - --secret-locations
      - $(SECRET_LOCATIONS)
      - --configs
      - $(CONFIGS)
      command:
      - /osde2e
      env:
      - name: CONFIGS
        value: aws,prod,region-random,e2e-suite
      - name: ENABLE_ALERTS
        value: "true"
      - name: PROVISION_SHARD_ID
        value: e78ec522-04c3-11ec-b4f0-8c1645a911be
      - name: SECRET_LOCATIONS
        value: /usr/local/osde2e-common,/usr/local/osde2e-credentials
      image: quay.io/app-sre/osde2e
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/osde2e-common
        name: osde2e-common
        readOnly: true
      - mountPath: /usr/local/osde2e-credentials
        name: osde2e-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: osde2e-common
      secret:
        secretName: osde2e-common
    - name: osde2e-credentials
      secret:
        secretName: osde2e-credentials
- agent: kubernetes
  cluster: build03
  cron: 0 6,14 * * *
  decorate: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "false"
  name: osde2e-prod-aws-informing-default
  spec:
    containers:
    - args:
      - test
      - --secret-locations
      - $(SECRET_LOCATIONS)
      - --configs
      - $(CONFIGS)
      command:
      - /osde2e
      env:
      - name: CONFIGS
        value: aws,prod,informing-suite
      - name: SECRET_LOCATIONS
        value: /usr/local/osde2e-common,/usr/local/osde2e-credentials
      image: quay.io/app-sre/osde2e
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/osde2e-common
        name: osde2e-common
        readOnly: true
      - mountPath: /usr/local/osde2e-credentials
        name: osde2e-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: osde2e-common
      secret:
        secretName: osde2e-common
    - name: osde2e-credentials
      secret:
        secretName: osde2e-credentials
- agent: kubernetes
  cluster: build03
  cron: 0 */8 * * *
  decorate: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "false"
  name: osde2e-prod-canary
  spec:
    containers:
    - args:
      - test
      - --secret-locations
      - $(SECRET_LOCATIONS)
      - --configs
      - $(CONFIGS)
      command:
      - /osde2e
      env:
      - name: CANARY_CHANCE
        value: "3"
      - name: CHANNEL
        value: stable
      - name: CLUSTER_NAME
        value: random
      - name: CONFIGS
        value: aws,prod,region-random,e2e-suite
      - name: SECRET_LOCATIONS
        value: /usr/local/osde2e-common,/usr/local/osde2e-credentials
      image: quay.io/app-sre/osde2e
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/osde2e-common
        name: osde2e-common
        readOnly: true
      - mountPath: /usr/local/osde2e-credentials
        name: osde2e-scale-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: osde2e-common
      secret:
        secretName: osde2e-common
    - name: osde2e-scale-credentials
      secret:
        secretName: osde2e-scale-credentials
- agent: kubernetes
  cluster: build03
  cron: 0 2 * * *
  decorate: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "false"
  name: osde2e-prod-canary-cleanup
  spec:
    containers:
    - args:
      - cleanup
      - --secret-locations
      - $(SECRET_LOCATIONS)
      - --configs
      - $(CONFIGS)
      command:
      - /osde2e
      env:
      - name: CONFIGS
        value: prod
      - name: SECRET_LOCATIONS
        value: /usr/local/osde2e-common,/usr/local/osde2e-credentials
      image: quay.io/app-sre/osde2e
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/osde2e-common
        name: osde2e-common
        readOnly: true
      - mountPath: /usr/local/osde2e-credentials
        name: osde2e-scale-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: osde2e-common
      secret:
        secretName: osde2e-common
    - name: osde2e-scale-credentials
      secret:
        secretName: osde2e-scale-credentials
- agent: kubernetes
  cluster: build03
  cron: 45 * * * *
  decorate: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "false"
  name: osde2e-prod-cleanup
  spec:
    containers:
    - args:
      - cleanup
      - --secret-locations
      - $(SECRET_LOCATIONS)
      - --configs
      - $(CONFIGS)
      command:
      - /osde2e
      env:
      - name: CONFIGS
        value: prod
      - name: SECRET_LOCATIONS
        value: /usr/local/osde2e-common,/usr/local/osde2e-credentials
      image: quay.io/app-sre/osde2e
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/osde2e-common
        name: osde2e-common
        readOnly: true
      - mountPath: /usr/local/osde2e-credentials
        name: osde2e-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: osde2e-common
      secret:
        secretName: osde2e-common
    - name: osde2e-credentials
      secret:
        secretName: osde2e-credentials
- agent: kubernetes
  cluster: build03
  cron: 0 */8 * * *
  decorate: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "false"
  name: osde2e-prod-gcp-e2e-default
  spec:
    containers:
    - args:
      - test
      - --secret-locations
      - $(SECRET_LOCATIONS)
      - --configs
      - $(CONFIGS)
      command:
      - /osde2e
      env:
      - name: CONFIGS
        value: gcp,prod,region-random,e2e-suite
      - name: SECRET_LOCATIONS
        value: /usr/local/osde2e-common,/usr/local/osde2e-credentials
      image: quay.io/app-sre/osde2e
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/osde2e-common
        name: osde2e-common
        readOnly: true
      - mountPath: /usr/local/osde2e-credentials
        name: osde2e-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: osde2e-common
      secret:
        secretName: osde2e-common
    - name: osde2e-credentials
      secret:
        secretName: osde2e-credentials
- agent: kubernetes
  cluster: build03
  cron: 0 0,9,17 * * *
  decorate: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "false"
  name: osde2e-prod-rosa-e2e-default
  spec:
    containers:
    - args:
      - test
      - --secret-locations
      - $(SECRET_LOCATIONS)
      - --configs
      - $(CONFIGS)
      command:
      - /osde2e
      env:
      - name: CONFIGS
        value: rosa,e2e-suite,region-random
      - name: ROSA_ENV
        value: prod
      - name: SECRET_LOCATIONS
        value: /usr/local/osde2e-common,/usr/local/osde2e-credentials,/usr/local/osde2e-rosa-production
      image: quay.io/app-sre/osde2e
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/osde2e-common
        name: osde2e-common
        readOnly: true
      - mountPath: /usr/local/osde2e-credentials
        name: osde2e-credentials
        readOnly: true
      - mountPath: /usr/local/osde2e-rosa-production
        name: osde2e-rosa-production
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: osde2e-common
      secret:
        secretName: osde2e-common
    - name: osde2e-credentials
      secret:
        secretName: osde2e-credentials
    - name: osde2e-rosa-production
      secret:
        secretName: osde2e-rosa-production
- agent: kubernetes
  cluster: build03
  cron: 0 4 * * *
  decorate: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "false"
  name: osde2e-rosa-int-cleanup
  spec:
    containers:
    - args:
      - set -o pipefail; ./scripts/clean-up-rosa.sh /usr/local/osde2e-rosa-integration
      command:
      - /bin/bash
      - -c
      image: amazon/aws-cli
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/osde2e-rosa-integration
        name: osde2e-rosa-integration
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: osde2e-rosa-integration
      secret:
        secretName: osde2e-rosa-integration
- agent: kubernetes
  cluster: build03
  cron: 0 4 * * *
  decorate: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "false"
  name: osde2e-rosa-prod-cleanup
  spec:
    containers:
    - args:
      - set -o pipefail; ./scripts/clean-up-rosa.sh /usr/local/osde2e-rosa-production
      command:
      - /bin/bash
      - -c
      image: amazon/aws-cli
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/osde2e-rosa-production
        name: osde2e-rosa-production
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: osde2e-rosa-production
      secret:
        secretName: osde2e-rosa-production
- agent: kubernetes
  cluster: build03
  cron: 0 4 * * *
  decorate: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "false"
  name: osde2e-rosa-stage-cleanup
  spec:
    containers:
    - args:
      - set -o pipefail; ./scripts/clean-up-rosa.sh /usr/local/osde2e-rosa-staging
      command:
      - /bin/bash
      - -c
      image: amazon/aws-cli
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/osde2e-rosa-staging
        name: osde2e-rosa-staging
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: osde2e-rosa-staging
      secret:
        secretName: osde2e-rosa-staging
- agent: kubernetes
  cluster: build03
  cron: 0 */6 * * *
  decorate: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "false"
  name: osde2e-stage-aws-e2e-default
  spec:
    containers:
    - args:
      - test
      - --secret-locations
      - $(SECRET_LOCATIONS)
      - --configs
      - $(CONFIGS)
      command:
      - /osde2e
      env:
      - name: CLOUD_PROVIDER_REGION
        value: ap-northeast-3
      - name: CONFIGS
        value: aws,stage,e2e-suite
      - name: SECRET_LOCATIONS
        value: /usr/local/osde2e-common,/usr/local/osde2e-credentials
      image: quay.io/app-sre/osde2e
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/osde2e-common
        name: osde2e-common
        readOnly: true
      - mountPath: /usr/local/osde2e-credentials
        name: osde2e-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: osde2e-common
      secret:
        secretName: osde2e-common
    - name: osde2e-credentials
      secret:
        secretName: osde2e-credentials
- agent: kubernetes
  cluster: build03
  cron: 0 */8 * * *
  decorate: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "false"
  name: osde2e-stage-gcp-e2e-default
  spec:
    containers:
    - args:
      - test
      - --secret-locations
      - $(SECRET_LOCATIONS)
      - --configs
      - $(CONFIGS)
      command:
      - /osde2e
      env:
      - name: CONFIGS
        value: gcp,stage,e2e-suite
      - name: SECRET_LOCATIONS
        value: /usr/local/osde2e-common,/usr/local/osde2e-credentials
      image: quay.io/app-sre/osde2e
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/osde2e-common
        name: osde2e-common
        readOnly: true
      - mountPath: /usr/local/osde2e-credentials
        name: osde2e-credentials
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: osde2e-common
      secret:
        secretName: osde2e-common
    - name: osde2e-credentials
      secret:
        secretName: osde2e-credentials
- agent: kubernetes
  cluster: build03
  cron: 0 0,9,17 * * *
  decorate: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "false"
  name: osde2e-stage-rosa-e2e-default
  spec:
    containers:
    - args:
      - test
      - --secret-locations
      - $(SECRET_LOCATIONS)
      - --configs
      - $(CONFIGS)
      command:
      - /osde2e
      env:
      - name: CONFIGS
        value: rosa,e2e-suite,region-random
      - name: ROSA_ENV
        value: stage
      - name: SECRET_LOCATIONS
        value: /usr/local/osde2e-common,/usr/local/osde2e-credentials,/usr/local/osde2e-rosa-staging
      image: quay.io/app-sre/osde2e
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/osde2e-common
        name: osde2e-common
        readOnly: true
      - mountPath: /usr/local/osde2e-credentials
        name: osde2e-credentials
        readOnly: true
      - mountPath: /usr/local/osde2e-rosa-staging
        name: osde2e-rosa-staging
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: osde2e-common
      secret:
        secretName: osde2e-common
    - name: osde2e-credentials
      secret:
        secretName: osde2e-credentials
    - name: osde2e-rosa-staging
      secret:
        secretName: osde2e-rosa-staging
- agent: kubernetes
  cluster: build03
  cron: 30 0,9,17 * * *
  decorate: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    pj-rehearse.openshift.io/can-be-rehearsed: "false"
  name: osde2e-stage-rosa-sts-e2e-default
  spec:
    containers:
    - args:
      - test
      - --secret-locations
      - $(SECRET_LOCATIONS)
      - --configs
      - $(CONFIGS)
      command:
      - /osde2e
      env:
      - name: CONFIGS
        value: rosa,e2e-suite,region-random
      - name: ROSA_ENV
        value: stage
      - name: ROSA_STS
        value: "true"
      - name: SECRET_LOCATIONS
        value: /usr/local/osde2e-common,/usr/local/osde2e-credentials,/usr/local/osde2e-rosa-staging
      image: quay.io/app-sre/osde2e
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /usr/local/osde2e-common
        name: osde2e-common
        readOnly: true
      - mountPath: /usr/local/osde2e-credentials
        name: osde2e-credentials
        readOnly: true
      - mountPath: /usr/local/osde2e-rosa-staging
        name: osde2e-rosa-staging
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: osde2e-common
      secret:
        secretName: osde2e-common
    - name: osde2e-credentials
      secret:
        secretName: osde2e-credentials
    - name: osde2e-rosa-staging
      secret:
        secretName: osde2e-rosa-staging
- agent: kubernetes
  cluster: build03
  cron: '@weekly'
  decorate: true
  decoration_config:
    skip_cloning: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    ci.openshift.io/generator: prowgen
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: periodic-ci-openshift-osde2e-main-osde2e-aro-cncf-conformance
  spec:
    containers:
    - args:
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --report-credentials-file=/etc/report/credentials
      - --target=osde2e-aro-cncf-conformance
      command:
      - ci-operator
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /etc/report
        name: result-aggregator
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: result-aggregator
      secret:
        secretName: result-aggregator
- agent: kubernetes
  cluster: build03
  cron: 0 0 3 * * *
  decorate: true
  decoration_config:
    skip_cloning: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    ci.openshift.io/generator: prowgen
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: periodic-ci-openshift-osde2e-main-osde2e-aro-e2e-latest-y
  reporter_config:
    slack:
      channel: '#aro-pipelines'
      job_states_to_report:
      - failure
      report_template: Job {{.Spec.Job}} failed.
  spec:
    containers:
    - args:
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --report-credentials-file=/etc/report/credentials
      - --target=osde2e-aro-e2e-latest-y
      command:
      - ci-operator
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /etc/report
        name: result-aggregator
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: result-aggregator
      secret:
        secretName: result-aggregator
- agent: kubernetes
  cluster: build03
  cron: 0 0 6 * * *
  decorate: true
  decoration_config:
    skip_cloning: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    ci.openshift.io/generator: prowgen
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: periodic-ci-openshift-osde2e-main-osde2e-aro-e2e-latest-z
  reporter_config:
    slack:
      channel: '#aro-pipelines'
      job_states_to_report:
      - failure
      report_template: Job {{.Spec.Job}} failed.
  spec:
    containers:
    - args:
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --report-credentials-file=/etc/report/credentials
      - --target=osde2e-aro-e2e-latest-z
      command:
      - ci-operator
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /etc/report
        name: result-aggregator
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: result-aggregator
      secret:
        secretName: result-aggregator
- agent: kubernetes
  cluster: build03
  cron: 0 0 9 * * *
  decorate: true
  decoration_config:
    skip_cloning: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    ci.openshift.io/generator: prowgen
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: periodic-ci-openshift-osde2e-main-osde2e-aro-e2e-ovn-latest-y
  spec:
    containers:
    - args:
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --report-credentials-file=/etc/report/credentials
      - --target=osde2e-aro-e2e-ovn-latest-y
      command:
      - ci-operator
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /etc/report
        name: result-aggregator
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: result-aggregator
      secret:
        secretName: result-aggregator
- agent: kubernetes
  cluster: build03
  cron: 0 0 12 * * *
  decorate: true
  decoration_config:
    skip_cloning: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    ci.openshift.io/generator: prowgen
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: periodic-ci-openshift-osde2e-main-osde2e-aro-e2e-ovn-latest-z
  spec:
    containers:
    - args:
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --report-credentials-file=/etc/report/credentials
      - --target=osde2e-aro-e2e-ovn-latest-z
      command:
      - ci-operator
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /etc/report
        name: result-aggregator
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: result-aggregator
      secret:
        secretName: result-aggregator
- agent: kubernetes
  cluster: build03
  cron: '@midnight'
  decorate: true
  decoration_config:
    skip_cloning: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    ci.openshift.io/generator: prowgen
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: periodic-ci-openshift-osde2e-main-osde2e-aro-nightly-cleanup
  spec:
    containers:
    - args:
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --report-credentials-file=/etc/report/credentials
      - --target=osde2e-aro-nightly-cleanup
      command:
      - ci-operator
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /etc/report
        name: result-aggregator
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: result-aggregator
      secret:
        secretName: result-aggregator
- agent: kubernetes
  cluster: build03
  cron: 36 22 * * *
  decorate: true
  decoration_config:
    skip_cloning: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    ci.openshift.io/generator: prowgen
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: periodic-ci-openshift-osde2e-main-osde2e-ocm-stage-adoption
  reporter_config:
    slack:
      channel: '#sd-cicd-alerts'
      job_states_to_report:
      - failure
      report_template: Job {{.Spec.Job}} failed.
  spec:
    containers:
    - args:
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --report-credentials-file=/etc/report/credentials
      - --target=osde2e-ocm-stage-adoption
      command:
      - ci-operator
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /etc/report
        name: result-aggregator
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: result-aggregator
      secret:
        secretName: result-aggregator
- agent: kubernetes
  cluster: build03
  cron: '@weekly'
  decorate: true
  decoration_config:
    skip_cloning: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    ci.openshift.io/generator: prowgen
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: periodic-ci-openshift-osde2e-main-osde2e-rosa-stage-conformance
  spec:
    containers:
    - args:
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --report-credentials-file=/etc/report/credentials
      - --target=osde2e-rosa-stage-conformance
      command:
      - ci-operator
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /etc/report
        name: result-aggregator
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: result-aggregator
      secret:
        secretName: result-aggregator
- agent: kubernetes
  cluster: build03
  cron: 0 */6 * * 0-5
  decorate: true
  decoration_config:
    skip_cloning: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    ci.openshift.io/generator: prowgen
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: periodic-ci-openshift-osde2e-main-osde2e-stage-aws-e2e-upgrade-to-latest
  spec:
    containers:
    - args:
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --report-credentials-file=/etc/report/credentials
      - --secret-dir=/secrets/osde2e-common
      - --secret-dir=/secrets/osde2e-credentials
      - --target=osde2e-stage-aws-e2e-upgrade-to-latest
      command:
      - ci-operator
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /secrets/osde2e-common
        name: osde2e-common
        readOnly: true
      - mountPath: /secrets/osde2e-credentials
        name: osde2e-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /etc/report
        name: result-aggregator
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: osde2e-common
      secret:
        secretName: osde2e-common
    - name: osde2e-credentials
      secret:
        secretName: osde2e-credentials
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: result-aggregator
      secret:
        secretName: result-aggregator
- agent: kubernetes
  cluster: build03
  cron: '@weekly'
  decorate: true
  decoration_config:
    skip_cloning: true
  extra_refs:
  - base_ref: main
    org: openshift
    repo: osde2e
  labels:
    ci.openshift.io/generator: prowgen
    pj-rehearse.openshift.io/can-be-rehearsed: "true"
  name: periodic-ci-openshift-osde2e-main-osde2e-stage-conformance
  spec:
    containers:
    - args:
      - --gcs-upload-secret=/secrets/gcs/service-account.json
      - --image-import-pull-secret=/etc/pull-secret/.dockerconfigjson
      - --report-credentials-file=/etc/report/credentials
      - --target=osde2e-stage-conformance
      command:
      - ci-operator
      image: ci-operator:latest
      imagePullPolicy: Always
      name: ""
      resources:
        requests:
          cpu: 10m
      volumeMounts:
      - mountPath: /secrets/gcs
        name: gcs-credentials
        readOnly: true
      - mountPath: /etc/pull-secret
        name: pull-secret
        readOnly: true
      - mountPath: /etc/report
        name: result-aggregator
        readOnly: true
    serviceAccountName: ci-operator
    volumes:
    - name: pull-secret
      secret:
        secretName: registry-pull-credentials
    - name: result-aggregator
      secret:
        secretName: result-aggregator
